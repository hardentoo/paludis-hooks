#!/bin/bash
#
# Paludis hook script to apply patch (w/o modifying corresponding ebuild file).
#
# Copyright (c), 2010-2017 by Alex Turbov <i.zaufi@gmail.com>
#
# Version: @PROJECT_VERSION@
#

source ${PALUDIS_EBUILD_DIR}/echo_functions.bash

declare -r CONFIG_FILE="@CMAKE_INSTALL_FULL_SYSCONFDIR@/paludis/hooks/configs/auto-patch.conf"
PATCH_DIR="@CMAKE_INSTALL_FULL_LOCALSTATEDIR@/db/paludis/autopatches"

# Configuration override
[[ -f ${CONFIG_FILE} ]] && source ${CONFIG_FILE}


if [[ "x${PALUDIS_AUTOPATCH_HOOK_DO_NOTHING}" = 'xyes' ]]; then
    einfo "Autopatch Hook: Do not apply any patches due explicit request"
    exit 0
fi

_ap_rememberfile="${T}/.autopatch_was_here_${PALUDIS_PID}"

issue_a_warning()
{
    if [[ x"${PALUDIS_AUTOPATCH_HOOK_NO_WARNING}" != 'xyes' ]]; then
        local -r tobe="$1"
        ewarn "WARNING: ${CATEGORY}/${PF} package $tobe installed with additional patches applied by auto-patch hook."
        ewarn "WARNING: Before filing a bug, remove all patches, reinstall, and try again..."
    fi
}

try_to_apply_patches()
{
    local check
    # TODO: Maybe implement dynamically detecting correct -pN for patch?
    local patch_cmd="patch -p1"
    for check in "${PATCH_DIR}/${HOOK}"/${CATEGORY}/{${P}-${PR},${P},${PN}}{,:${SLOT}}; do
        if [[ -d ${check} ]] ; then
            # Store `nullglob` state and enforce it set
            local saved_opt=$(shopt -p nullglob)
            shopt -s nullglob

            cd "${S}" || die "Failed to cd into ${S}!"
            for pfull in "${check}"/*.patch ; do
                local pname="$(basename ${pfull})"
                ${patch_cmd} --dry-run -f < "${pfull}" 2>&1
                local pret="$?"
                if [[ "${pret}" = "0" ]]; then
                    einfo "Applying ${pname} ..."
                    ${patch_cmd} < "${pfull}" 2>&1
                    pret="$?"
                    [[ "${pret}" = "0" ]] || die "Dry-run patching with ${pname} succeeded but actually failed"
                else
                    die "Patch ${pname} can not be used"
                fi
                touch "${_ap_rememberfile}" || die "Failed to touch ${_ap_rememberfile}!"
            done

            # Restore `nullglob` state
            eval "${saved_opt}"

            if [[ -e ${_ap_rememberfile} ]]; then
                issue_a_warning "will be"
            else
                einfo "No patches in for this package."
            fi
        fi
    done
}

case "${HOOK}" in
    # ATTENTION This script must be symlinked to the following hook dirs:
    ebuild_compile_post   | \
    ebuild_compile_pre    | \
    ebuild_configure_post | \
    ebuild_configure_pre  | \
    ebuild_install_pre    | \
    ebuild_unpack_post    )
        try_to_apply_patches
        ;;
    install_all_post)
        if [[ -e ${_ap_rememberfile} ]] ; then
            issue_a_warning "was"
        fi
        ;;
esac

# kate: hl bash;
